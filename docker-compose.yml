version: "2.4"
services:
  model_service:
    build: ./model_service
    network_mode: "host"

  init_tables:
    build: ./db
    network_mode: "host"
    depends_on:
      postgres:
        condition: service_healthy

  backend-api:
    build: ./backend-api
    network_mode: "host"
    depends_on:
      postgres:
        condition: service_healthy

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    expose:
      - "5672"
      - "15672"
    network_mode: "host"
    healthcheck:
        test: [ "CMD", "nc", "-z", "localhost", "5672" ]
        interval: 10s
        timeout: 10s
        retries: 5

  processing:
    build: ./processing
    network_mode: "host"
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:10
    environment:
      - POSTGRES_DB=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    volumes: 
      - ./postgres-data:/var/lib/postgresql/data
    network_mode: "host"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
